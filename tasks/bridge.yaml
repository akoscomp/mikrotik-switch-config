---
### Debug
    - name: debug info
      debug:
        var: host_vlans
      tags:
        - debug

    - name: Add bridge
      debug:
        msg: "/interface bridge add frame-types=admit-only-vlan-tagged ingress-filtering=yes name={{ group_bridge_name }} vlan-filtering=yes"
      tags:
        - debug

    - name: Create/update vlan
      debug:
        msg:
          - /interface bridge vlan add bridge={{ group_bridge_name }} \
              vlan-ids={{ item.value.id }} \
              tagged={{ item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten | join(',') }} \
              comment={{ item.value.name }}
          - /interface bridge vlan set \
              [find vlan-ids={{ item.value.id }}] \
              tagged={{ item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten | join(',') }} \
              comment={{ item.value.comment | default (item.value.name) }}
      with_dict: "{{ global_vlan_list }}"
      when:
        - host_vlans is not defined
        - item.value.type is defined
        - item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten
      tags:
        - debug

  ### VLANS
    - name: Add bridge
      community.routeros.command:
        commands:
          - /interface bridge add frame-types=admit-only-vlan-tagged ingress-filtering=yes name={{ group_bridge_name }} vlan-filtering=yes

    - name: Create/update vlan
      community.routeros.command:
        commands:
          - /interface bridge vlan add bridge={{ group_bridge_name }} \
              vlan-ids={{ item.value.id }} \
              tagged={{ item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten | join(',') }} \
              comment={{ item.value.name }}
          - /interface bridge vlan set \
              [find vlan-ids={{ item.value.id }}] \
              tagged={{ item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten | join(',') }} \
              comment={{ item.value.comment | default (item.value.name) }}
      with_dict: "{{ global_vlan_list }}"
      when:
        - host_vlans is not defined
        - item.value.type is defined
        - item.value.type | select('match', interfaces | join('|')) | map('extract', interfaces) | flatten
